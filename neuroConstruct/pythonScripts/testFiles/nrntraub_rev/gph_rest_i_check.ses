print "note:"
print "load this session to confirm gph_rest_i.hoc"
{load_file("nrngui.hoc")}
objectvar save_window_, rvp_
objectvar scene_vector_[5]
objectvar ocbox_, ocbox_list_, scene_, scene_list_
{ocbox_list_ = new List()  scene_list_ = new List()}
{pwman_place(0,0,0)}
{
xpanel("Cell Run", 0)
xcheckbox("deepaxax",&Vector[5].x[0],"runcell(0) run()")
xcheckbox("deepbask",&Vector[5].x[1],"runcell(1) run()")
xcheckbox("deepLTS",&Vector[5].x[2],"runcell(2) run()")
xcheckbox("nontuftRS",&Vector[5].x[3],"runcell(3) run()")
xcheckbox("nRT",&Vector[5].x[4],"runcell(4) run()")
xcheckbox("spinstell",&Vector[5].x[5],"runcell(5) run()")
xcheckbox("supaxax",&Vector[5].x[6],"runcell(6) run()")
xcheckbox("supbask",&Vector[5].x[7],"runcell(7) run()")
xcheckbox("supLTS",&Vector[5].x[8],"runcell(8) run()")
xcheckbox("suppyrFRB",&Vector[5].x[9],"runcell(9) run()")
xcheckbox("suppyrRS",&Vector[5].x[10],"runcell(10) run()")
xcheckbox("TCR",&Vector[5].x[11],"runcell(11) run()")
xcheckbox("tuftIB",&Vector[5].x[12],"runcell(12) run()")
xcheckbox("tuftRS",&Vector[5].x[13],"runcell(13) run()")
xlabel("")
xcheckbox("NEURON style ri",&normal_,"exact(0)")
xcheckbox("Exact traub style ri",&exact_,"exact(1)")
xpanel(20,80)
}
{
xpanel("RunControl", 0)
v_init = -65
xvalue("Init","v_init", 1,"stdinit()", 1, 1 )
xbutton("Init & Run","run()")
xbutton("Stop","stoprun=1")
runStopAt = 5
xvalue("Continue til","runStopAt", 1,"{continuerun(runStopAt) stoprun=1}", 1, 1 )
runStopIn = 1
xvalue("Continue for","runStopIn", 1,"{continuerun(t + runStopIn) stoprun=1}", 1, 1 )
xbutton("Single Step","steprun()")
t = 3000
xvalue("t","t", 2 )
tstop = 3000
xvalue("Tstop","tstop", 1,"tstop_changed()", 0, 1 )
dt = 0.47946
xvalue("dt","dt", 1,"setdt()", 0, 1 )
steps_per_ms = 40
xvalue("Points plotted/ms","steps_per_ms", 1,"setdt()", 0, 1 )
screen_update_invl = 0.05
xvalue("Scrn update invl","screen_update_invl", 1,"", 0, 1 )
realtime = 9.16
xvalue("Real Time","realtime", 0,"", 0, 1 )
xpanel(193,130)
}
{
save_window_ = new Graph(0)
save_window_.size(0,3000,-80,40)
scene_vector_[2] = save_window_
{save_window_.view(0, -80, 3000, 120, 539, 110, 534, 334)}
graphList[0].append(save_window_)
save_window_.save_name("graphList[0].")
save_window_.addvar("cell.comp[57].v(.5)", 1, 1, 0.8, 0.9, 2)
}

//Begin VariableTimeStep
{
ocbox_ = NumericalMethodPanel[0]
}
{object_push(ocbox_)}
{
atol_ = 0.0001  CVode[0].atol(atol_)
restore(301, 1)
}
{object_pop()}
{
ocbox_.map("VariableTimeStep", 188, 542, 273, 113)
}
objref ocbox_
//End VariableTimeStep

{
save_window_ = new PlotShape(0)
save_window_.size(-172.234,297.945,-148.798,314.851)
save_window_.variable("v")
scene_vector_[3] = save_window_
{save_window_.view(-172.234, -148.798, 470.179, 463.649, 500, 539, 216, 213)}
fast_flush_list.append(save_window_)
save_window_.save_name("fast_flush_list.")
}
{
save_window_ = new Graph(0)
save_window_.size(0,3000,-1,1)
scene_vector_[4] = save_window_
{save_window_.view(0, -1, 3000, 2, 677, 243, 816, 678)}
graphList[1].append(save_window_)
save_window_.save_name("graphList[1].")
save_window_.addexpr("cell.comp[1].ik( 0.5 )", 1, 1, 0.8, 0.9, 2)
save_window_.addexpr("cell.comp[1].ik_k2( 0.5 )", 1, 1, 0.8, 0.9, 2)
save_window_.addexpr("cell.comp[1].ik_ka( 0.5 )", 1, 1, 0.8, 0.9, 2)
save_window_.addexpr("cell.comp[1].ik_kahp_slower( 0.5 )", 1, 1, 0.8, 0.9, 2)
save_window_.addexpr("cell.comp[1].ik_kc_fast( 0.5 )", 1, 1, 0.8, 0.9, 2)
save_window_.addexpr("cell.comp[1].ik_kdr_fs( 0.5 )", 1, 1, 0.8, 0.9, 2)
save_window_.addexpr("cell.comp[1].ik_km( 0.5 )", 1, 1, 0.8, 0.9, 2)
}
objectvar scene_vector_[1]
{doNotify()}
